---

title: "<span>Welcome&hellip; It's</span> Cocktail O'Clock 10K"

---

{{ organism "header" }}

<div class="app" role="tablist">

  {{ organism "menu-category" }}

  {{ organism "message" }}

  <main class="main" role="main">

    {{ organism "category-section" }}

  </main>
</div>

<script type="text/javascript">

  /**
   * Template engine
   */
  (function() {
    'use strict';
    var httpRequest;
    var targetMessage = document.getElementById('jsMessage');
    var statusMessage = document.getElementById('jsStatus');

    //targetMessage.classList.add('hide');
    statusMessage.textContent = 'Please wait.';
    function makeRequest(url) {
      httpRequest = new XMLHttpRequest();

      if (!httpRequest) {
        targetMessage.classList.remove('hide');
        statusMessage.textContent = 'Sorry, I need a connection!';
        return false;
      }
      httpRequest.onreadystatechange = generateContents;
      httpRequest.open('GET', url);
      httpRequest.send();
    }

    function generateContents() {
      if (httpRequest.readyState === XMLHttpRequest.DONE) {
        if (httpRequest.status === 200) {
          var data = JSON.parse(httpRequest.responseText);
          var dataset;
          var recipes = data.rsp.recipes.recipe;

          document.getElementById('jsTeaserSpirituous').innerHTML = '';
          document.getElementById('jsTeaserNonAlc').innerHTML = '';

          var ingredients = function () {
            var components = obj.components.component;
            var ingredientList = '';
            for (var i = 0; i < components.length; i++) {
              var comp = components[i]['@attributes'];
              ingredientList += '<span class="teaser-section__unit">' + comp.amount + comp.unit + '</span> ' + comp.name + ', ';
            }
            return ingredientList;
          };

          var insertTemplate = function(dataset, articleTarget, i) {
            articleTarget.insertAdjacentHTML('beforeend',
              '<article class="teaser-section__teaser" data-tag="' + dataset.difficulty + '" data-id="' + i + '">' +
              '<img class="teaser-section__image" width="150" height="150" src="' + dataset.picture + '" alt="" />' +
              '<div  class="teaser-section__text">' +
              '<h3>' + dataset.name + '</h3>' +
              '<dt>Ingredients:</dt>' +
              '<dd>' + ingredients() + '</dd>' +
              '<p><strong>Rating;</strong> ' + dataset.rating + ' / 5</p>' +
              '<input type="checkbox" class="teaser-section__more-button" name="learn-more' + i + '" id="learn-more' +i + '" />' +
              '<label for="learn-more'+ i + '">Learn more</label>' +
              '<dl class="teaser-section__more">' +
              '<dt>Description:</dt>' +
              '<dd>' + dataset.description + '</dd>' +
              '<dt>Instruction:</dt>' +
              '<dd>' + dataset.instructions + '</dd>' +
              '</dl>' +
              '</div>' +
              '</article>'
            );
          };

          for (var i = 0; i < recipes.length; i++) {
            var obj = recipes[i];
            var articleTarget;
            dataset = {
              difficulty: obj['@attributes'].difficulty || 'no data',
              picture: obj.photos.photo['@attributes'].url || 'images/placeholder.svg',
              name: obj['@attributes'].name || 'no data',
              description: obj['@attributes'].description || '-',
              rating: obj['@attributes'].rating || 'no data',
              instructions: obj['@attributes'].instruction || '-'
            };

            if (obj['@attributes'].isAlcoholic === '1') {
              articleTarget = document.getElementById('jsTeaserSpirituous');
            } else {
              articleTarget = document.getElementById('jsTeaserNonAlc');
            }

            insertTemplate(dataset, articleTarget, i);

          }
          targetMessage.classList.add('hide');

        } else {
          targetMessage.classList.remove('hide');
          document.getElementById('jsStatus').textContent = 'Sorry, I need a connection!';
          return false;
        }
      }
    }
    makeRequest('../data/data-offline.json');
  })();

  /**
   * Acessibility and Keyboard Navigation
   */
  (function() {
    var section1 = document.getElementById('jsSection1');
    var section2 = document.getElementById('jsSection2');
    var section1Inputs = section1.getElementsByTagName('input');
    var section2Inputs = section2.getElementsByTagName('input');
    var catMenu1 = document.getElementById('category01');
    var catMenu2 = document.getElementById('category02');
    var filter1Cat1 = document.getElementById('category01-filter01');
    var filter2Cat1 = document.getElementById('category01-filter02');
    var filter1Cat2 = document.getElementById('category02-filter01');
    var filter2Cat2 = document.getElementById('category02-filter02');

    // initially set section2Inputs inactive
    var setInitialNotActive = function() {
      for(var i=0; i<section2Inputs.length; i++) {
          section2Inputs[i].setAttribute('tabindex', '-1');
      }
      section2.setAttribute('aria-hidden', 'true');
    };
    window.onload = setInitialNotActive;

    // aria controls
    catMenu1.onfocus = function() {
      section1.setAttribute('aria-hidden', 'false');
      section2.setAttribute('aria-hidden', 'true');
      for(var i=0; i<section1Inputs.length; i++) {
          section1Inputs[i].setAttribute('tabindex', '0');
      }
      for(var x=0; x<section2Inputs.length; x++) {
          section2Inputs[x].setAttribute('tabindex', '-1');
      }
    };
    catMenu2.onfocus = function() {
      section1.setAttribute('aria-hidden', 'true');
      section2.setAttribute('aria-hidden', 'false');
      for(var i=0; i<section1Inputs.length; i++) {
          section1Inputs[i].setAttribute('tabindex', '-1');
      }
      for(var x=0; x<section2Inputs.length; x++) {
          section2Inputs[x].setAttribute('tabindex', '0');
      }
    };

    filter1Cat1.onchange = function() {
      var filterTag1Cat1 = section1.querySelectorAll('[data-tag="beginner"]');
      var filterTag2Cat1 = section1.querySelectorAll('[data-tag="advanced"]');
      if (this.checked) {
        for(var i=0; i<filterTag2Cat1.length; i++) {
          filterTag2Cat1[i].setAttribute('aria-hidden', 'true');
        }
        for(var x=0; x<filterTag1Cat1.length; x++) {
          filterTag1Cat1[x].setAttribute('aria-hidden', 'false');
        }
      }
    };
    filter2Cat1.onchange = function() {
      var filterTag1Cat1 = section1.querySelectorAll('[data-tag="beginner"]');
      var filterTag2Cat1 = section1.querySelectorAll('[data-tag="advanced"]');
      if (this.checked) {
        for(var i=0; i<filterTag2Cat1.length; i++) {
          filterTag2Cat1[i].setAttribute('aria-hidden', 'false');
        }
        for(var x=0; x<filterTag1Cat1.length; x++) {
          filterTag1Cat1[x].setAttribute('aria-hidden', 'true');
        }
      }
    };
    filter1Cat2.onchange = function() {
      var filterTag1Cat2 = section2.querySelectorAll('[data-tag="beginner"]');
      var filterTag2Cat2 = section2.querySelectorAll('[data-tag="advanced"]');
      if (this.checked) {
        for(var i=0; i<filterTag2Cat2.length; i++) {
          filterTag2Cat2[i].setAttribute('aria-hidden', 'true');
        }
        for(var x=0; x<filterTag1Cat2.length; x++) {
          filterTag1Cat2[x].setAttribute('aria-hidden', 'false');
        }
      }
    };
    filter2Cat2.onchange = function() {
      var filterTag1Cat2 = section2.querySelectorAll('[data-tag="beginner"]');
      var filterTag2Cat2 = section2.querySelectorAll('[data-tag="advanced"]');
      if (this.checked) {
        if (this.checked) {
          for(var i=0; i<filterTag2Cat2.length; i++) {
            filterTag2Cat2[i].setAttribute('aria-hidden', 'false');
          }
          for(var x=0; x<filterTag1Cat2.length; x++) {
            filterTag1Cat2[x].setAttribute('aria-hidden', 'true');
          }
        }
      }
    };
  })();
</script>
